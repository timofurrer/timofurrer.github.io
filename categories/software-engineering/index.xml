<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software engineering on Timo's Blog</title><link>https://tuxtimo.me/categories/software-engineering/</link><description>Recent content in software engineering on Timo's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 Nov 2021 09:00:12 +0100</lastBuildDate><atom:link href="https://tuxtimo.me/categories/software-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Pass vs. Ellipsis</title><link>https://tuxtimo.me/posts/2021/11/05/python-pass-vs.-ellipsis/</link><pubDate>Fri, 05 Nov 2021 09:00:12 +0100</pubDate><guid>https://tuxtimo.me/posts/2021/11/05/python-pass-vs.-ellipsis/</guid><description>I&amp;rsquo;ve recently had a nerdy discussion with a colleague during a code review about when to use Pythons pass statement1 vs. the ellipsis literal ...2
You&amp;rsquo;ve probably seen the pass statement in Python code as a means to indicate that a block is intentionally left empty to avoid a SyntaxError. Like in the following except block where we expect that an exception might be raised but just want to ignore it:</description></item><item><title>Git Rebase vs. Merge</title><link>https://tuxtimo.me/posts/2021/11/04/git-rebase-vs.-merge/</link><pubDate>Thu, 04 Nov 2021 21:27:38 +0200</pubDate><guid>https://tuxtimo.me/posts/2021/11/04/git-rebase-vs.-merge/</guid><description>In every team I&amp;rsquo;ve been part of for the last few years we&amp;rsquo;ve always had a debate sooner or later if we should use a git merge or git rebase to keep a branch up-to-date with it&amp;rsquo;s source branch.
This post sheds some light on the pros and cons of both and my opinion on what you should use for your team.
Before I go on, let&amp;rsquo;s get on the same page what a few terms mean throughout this article:</description></item></channel></rss>